$(function () {
    // wp_nav control be put in .raw-menu-raw-data div
    var menu_data = buildNav('raw-nav-data');
    render_menu(menu_data);
    build_col(menu_data);
    //nav.active
    if ($('.navlist2').length > 0) {
        $('.navlist>li').each(function (idx, ele) {
            $(ele).children('a').text() == $('.common-local a').eq(1).text() ? $(ele).addClass('active') : '';
        });
    } else {
        $('.navlist>li:first').addClass('active');
    }
    $('.local-title,.list-title h4').text($('.common-local a').eq(1).text());

    // 定位到文章标题
    $('.common-local .article_title').text($('.article-header .article-title').text());

    //common-local
    $('.common-local span').replaceWith('<span>></span>');
    //navlist2.active
    if ($('.common-local a').length > 2) {
        $('.navlist2>li').each(function (idx, ele) {
            $(ele).children('a').text() == $('.common-local a').eq(2).text() ? $(ele).addClass('active') : '';
        });
        setTimeout(function () {
            $('.thr-sub>li').each(function (idx, ele) {
                $(ele).children('a').text() == $('.common-local a').eq(3).text() ? $(ele).children('a').addClass('active') : '';
            });
        }, 50)
    }
    //else {
    //$('.navlist2>li a:first').addClass('active');
    //}

    //分页设置
    // if (('.wp_paging').length > 0) {
    //     $('.pages_count').hide();
    //     var info = ["第一页", "上一页", "下一页", "尾页"];
    //     $('.page_nav a').each(function (idx, ele) {
    //         var a = idx + 1;
    //         $(ele).find('span').html('<img src="/_upload/tpl/03/1c/796/template796/images/page_button_' + a + '.png" title="' + info[idx] + '" alt="' + info[idx] + '">');
    //     });
    // };

    if (('.wp_paging').length > 0) {
        $('.pages_count').hide();
        var info = ["第一页", "上一页", "下一页", "尾页"];
        $('.page_nav a').each(function (idx, ele) {
            var a = idx + 1;
            $(ele).find('span').addClass('iconfont icon-page_button_' + a);
            $(ele).find('span').text('');
            $(ele).attr('title', info[idx]);
        });
    };
});
//build sidecolumns
function build_col(data) {
    var html = '';
    var itemTpl = '<li><a href="{href}" target="{target}">{title}</a></li>';
    var subItemTpl = '<a href="javascript: void(0)" target="{target}">{title}</a>';
    for (var key in data.nav) {
        if (data.nav[key].text == $('.common-local a').eq(1).text()) {
            //开始搭建
            html += '<ul class="navlist2">';
            if (data.nav[key].subItems) {
                //存在二级
                for (var k in data.nav[key].subItems) {
                    if (data.nav[key].subItems[k].subItems) {
                        //存在三级
                        html += '<li class="havsub">';
                        html += renderLink(data.nav[key].subItems[k], subItemTpl);
                        html += '<ul class="thr-sub">';
                        for (var kk in data.nav[key].subItems[k].subItems) {
                            if (data.nav[key].subItems[k].subItems[kk].subItems) {
                                //存在四级
                                html += '<li class="havefour">';
                                html += renderLink(data.nav[key].subItems[k].subItems[kk], subItemTpl);
                                html += '<ul>';
                                for (var kkk in data.nav[key].subItems[k].subItems[kk].subItems) {
                                    html += renderLink(data.nav[key].subItems[k].subItems[kk].subItems[kkk], itemTpl);
                                }
                                html += '</ul>';
                                html += '</li>';
                            } else {
                                //不存在四级
                                html += renderLink(data.nav[key].subItems[k].subItems[kk], itemTpl);
                            }
                        }
                        html += '</ul>';
                        html += '</li>';
                    } else {
                        //不存在三级
                        html += renderLink(data.nav[key].subItems[k], itemTpl);
                    }
                }
            } else {
                //不存在二级
            }
            html += '</ul>';
            $('.navlist2').replaceWith(html);
        }
    }
}

// render menu data to target html
function render_menu(data) {
    var html = '<ul class="navlist clearfix">';
    var html_m = '<ul class="mobile-navlist clearfix">';
    var itemTpl = '<li><a href="{href}" target="{target}"><span>{text}</span></a></li>';
    var subItemTpl_1 = '<a href="{href}" target="{target}"><span>{text}</span></a>';
    var subItemTpl_2 = '<a href="javascript: void(0);" target="{target}"><span>{text}</span></a>';
    // build it.
    for (var key in data.nav) {
        // has sub items
        if (key < 8) {
            if (data.nav[key].subItems) {
                html += '<li class="nav-item">';
                html_m += '<li class="nav-item">';
                html += renderLink(data.nav[key], subItemTpl_1);
                html_m += renderLink(data.nav[key], subItemTpl_2);
                html += '<ul class="nav-item-menu">';
                html_m += '<ul class="nav-item-menu">';
                for (var k in data.nav[key].subItems) {
                    if (data.nav[key].subItems[k].subItems) {
                        html_m += '<li class="havethr">';
                        html_m += renderLink(data.nav[key].subItems[k], subItemTpl_2);
                        html_m += '<ul class="thrnav">';
                        for (var kk in data.nav[key].subItems[k].subItems) {
                            html_m += renderLink(data.nav[key].subItems[k].subItems[kk], itemTpl);
                        }
                        html_m += '</ul>';
                        html_m += '</li>';
                    }
                    else {
                        html_m += renderLink(data.nav[key].subItems[k], itemTpl);
                    }
                    html += renderLink(data.nav[key].subItems[k], itemTpl);
                }
                html += '</ul>';
                html += '</li>';
                html_m += '</ul>';
                html_m += '</li>';
                // no sub items.
            } else {
                html += renderLink(data.nav[key], itemTpl);
                html_m += renderLink(data.nav[key], itemTpl);
            }
        }
    };
    html += '</ul>';
    // replace it.
    $('.navlist').replaceWith(html);
    $('.mobile-navlist').replaceWith(html_m);
}

function renderLink(obj, tpl) {
    return tpl.replace('{text}', obj.text).replace('{title}', obj.title).replace('{href}', obj.href).replace('{target}', obj.target);
}

// wp_nav control must be put in div.cssName
// the css style must be set to display:none
// try to build it!
function buildNav(cssName) {
    var data = { "nav": [] };
    data['nav'] = analysis($('.' + cssName + ' .wp_nav'), []);
    return data;
}

// handle recursive
// json struct
// {"text":"text", "href":"href", "target":"target", "title":"title", "subItems":[]}
function analysis(ul, itemArray) {
    ul.children('li').each(function (idx, el) {
        var a = $(el).children('a');
        var item = {};
        item['text'] = a.children('span').text();
        item['href'] = a.attr('href');
        item['target'] = a.attr('target');
        item['title'] = a.attr('title');
        if ($(el).children('ul').size() == 1) {
            item['subItems'] = analysis($(el).children('ul'), []);
        }
        itemArray.push(item);
    });
    return itemArray;
}
